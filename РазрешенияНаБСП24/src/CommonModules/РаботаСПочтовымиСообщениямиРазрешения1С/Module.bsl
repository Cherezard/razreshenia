
Процедура ОтправитьУведомлениеОНулевомОстатке(Документ = Неопределено) Экспорт 
	
	Тема = "Автоматическое уведомление о нулевом остатке образцов по разрешениям";
	ЗаголовокТекста = "Достигнут нулевой остаток по следующим образцам:" + Символы.ПС;
	ОсновнойТекстПисьма = "";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	ТекстЗапроса = "ВЫБРАТЬ
	               |	РазрешенияОбразцы.НомерСтроки,
	               |	УведомлениеПоОстаткамКвоты.Разрешение,
	               |	УведомлениеПоОстаткамКвоты.Образец,
	               |	УведомлениеПоОстаткамКвоты.ТипОбразца,
	               |	ЕСТЬNULL(ОстаткиПоКвотеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ВТ_ОстаткиПоОбразцам
	               |ИЗ
	               |	РегистрСведений.УведомлениеПоОстаткамКвоты КАК УведомлениеПоОстаткамКвоты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКвоте.Остатки(&Период, ) КАК ОстаткиПоКвотеОстатки
	               |		ПО УведомлениеПоОстаткамКвоты.Разрешение = ОстаткиПоКвотеОстатки.Разрешение
	               |			И УведомлениеПоОстаткамКвоты.Образец = ОстаткиПоКвотеОстатки.Образец
	               |			И УведомлениеПоОстаткамКвоты.ТипОбразца = ОстаткиПоКвотеОстатки.ТипОбразца
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Разрешения.Образцы КАК РазрешенияОбразцы
	               |		ПО УведомлениеПоОстаткамКвоты.Разрешение = РазрешенияОбразцы.Ссылка
	               |			И УведомлениеПоОстаткамКвоты.Образец = РазрешенияОбразцы.Образец
	               |			И УведомлениеПоОстаткамКвоты.ТипОбразца = РазрешенияОбразцы.ТипОбразца
				   |ГДЕ
				   |	НЕ УведомлениеПоОстаткамКвоты.НулевойОтстаток
				   |	//ОтборПоДокументу
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОстаткиПоОбразцам.Разрешение КАК Разрешение,
	               |	ПРЕДСТАВЛЕНИЕ(ВТ_ОстаткиПоОбразцам.Разрешение) КАК ПредставлениеРазрешение,
	               |	ВТ_ОстаткиПоОбразцам.НомерСтроки,
	               |	ВТ_ОстаткиПоОбразцам.Образец,
	               |	ПРЕДСТАВЛЕНИЕ(ВТ_ОстаткиПоОбразцам.Образец) КАК ПредставлениеОбразец,
	               |	ВТ_ОстаткиПоОбразцам.ТипОбразца
	               |ИЗ
	               |	ВТ_ОстаткиПоОбразцам КАК ВТ_ОстаткиПоОбразцам
	               |ГДЕ
	               |	ВТ_ОстаткиПоОбразцам.КоличествоОстаток = 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Разрешение
	               |ИТОГИ ПО
	               |	Разрешение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ОстаткиПоОбразцам";
				   
	Если Не Документ = Неопределено Тогда
	     СписокРазрешений = Документ.Разрешения.ВыгрузитьКолонку("Разрешение");
		 Запрос.УстановитьПараметр("Период", Документ.МоментВремени());
		 Запрос.УстановитьПараметр("СписокРазрешений", СписокРазрешений);
		 ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ОтборПоДокументу", "И УведомлениеПоОстаткамКвоты.Разрешение В(&СписокРазрешений)");
	КонецЕсли; 			   
				   
	Запрос.Текст = ТекстЗапроса;			   
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаРазрешение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаРазрешение.Следующий() Цикл
	    ОсновнойТекстПисьма = ОсновнойТекстПисьма + ВыборкаРазрешение.ПредставлениеРазрешение + ":" + Символы.ПС; 
		ВыборкаДетальныеЗаписи = ВыборкаРазрешение.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОсновнойТекстПисьма = ОсновнойТекстПисьма + Символы.Таб + ВыборкаДетальныеЗаписи.НомерСтроки + ". образец: " + ВыборкаДетальныеЗаписи.ПредставлениеОбразец + "/ тип: " + ВыборкаДетальныеЗаписи.ТипОбразца + "/ количество остаток: 0" + Символы.ПС;
		КонецЦикла;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ОсновнойТекстПисьма) Тогда
		
		ТекстПисьма = ЗаголовокТекста + ОсновнойТекстПисьма;
		СистемнаяУчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		
		ДоступныеУчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина,,Ложь);
		Если ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Не обнаружены доступные учетные записи электронной почты, обратитесь к администратору системы.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		//ОтправитьПочтовоеСообщение
		ПараметрыПисьма = СформироватьПараметрыПисьма(Тема, ТекстПисьма, ДоступныеУчетныеЗаписи);
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(СистемнаяУчетнаяЗапись, ПараметрыПисьма);
		
	КонецЕсли; 

КонецПроцедуры

Процедура ОтправитьУведомлениеОМинимальномОстаткеПоКвоте() Экспорт 
	
	Тема = "Автоматическое уведомление о минимальном остатке образцов по разрешениям";
	ЗаголовокТекста = "Достигнут минимальный остаток по следующим образцам:" + Символы.ПС;
	ОсновнойТекстПисьма = "";

	МинимальныйПроцентныйОстаток = Константы.МинимальныйПроцентныйОстатокОбразца.Получить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МинимальныйПроцентныйОстаток", МинимальныйПроцентныйОстаток);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.Текст = "ВЫБРАТЬ
	               |	УведомлениеПоОстаткамКвоты.Разрешение,
	               |	ОстаткиПоКвотеОстаткиИОбороты.НомерСтроки,
	               |	УведомлениеПоОстаткамКвоты.Образец,
	               |	УведомлениеПоОстаткамКвоты.ТипОбразца,
	               |	ЕСТЬNULL(ОстаткиПоКвотеОстаткиИОбороты.КоличествоПриход, 0) КАК РазмерКвоты
	               |ПОМЕСТИТЬ ВТ_РазмерКвоты
	               |ИЗ
	               |	РегистрСведений.УведомлениеПоОстаткамКвоты КАК УведомлениеПоОстаткамКвоты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКвоте.ОстаткиИОбороты(, , Запись, , ) КАК ОстаткиПоКвотеОстаткиИОбороты
	               |		ПО УведомлениеПоОстаткамКвоты.Разрешение = ОстаткиПоКвотеОстаткиИОбороты.Разрешение
	               |			И УведомлениеПоОстаткамКвоты.Образец = ОстаткиПоКвотеОстаткиИОбороты.Образец
	               |			И УведомлениеПоОстаткамКвоты.ТипОбразца = ОстаткиПоКвотеОстаткиИОбороты.ТипОбразца
	               |			И УведомлениеПоОстаткамКвоты.Разрешение = ОстаткиПоКвотеОстаткиИОбороты.Регистратор
	               |ГДЕ
	               |	НЕ УведомлениеПоОстаткамКвоты.МинимальныйОстаток
	               |	И НЕ УведомлениеПоОстаткамКвоты.НулевойОтстаток
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УведомлениеПоОстаткамКвоты.Разрешение,
	               |	УведомлениеПоОстаткамКвоты.Образец,
	               |	УведомлениеПоОстаткамКвоты.ТипОбразца,
	               |	ЕСТЬNULL(ОстаткиПоКвотеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ВТ_ОстаткиПоОбразцам
	               |ИЗ
	               |	РегистрСведений.УведомлениеПоОстаткамКвоты КАК УведомлениеПоОстаткамКвоты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКвоте.Остатки(, ) КАК ОстаткиПоКвотеОстатки
	               |		ПО УведомлениеПоОстаткамКвоты.Разрешение = ОстаткиПоКвотеОстатки.Разрешение
	               |			И УведомлениеПоОстаткамКвоты.Образец = ОстаткиПоКвотеОстатки.Образец
	               |			И УведомлениеПоОстаткамКвоты.ТипОбразца = ОстаткиПоКвотеОстатки.ТипОбразца
	               |ГДЕ
	               |	НЕ УведомлениеПоОстаткамКвоты.МинимальныйОстаток
	               |	И НЕ УведомлениеПоОстаткамКвоты.НулевойОтстаток
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОстаткиПоОбразцам.Разрешение,
	               |	ВТ_РазмерКвоты.НомерСтроки,
	               |	ВТ_ОстаткиПоОбразцам.Образец,
	               |	ВТ_ОстаткиПоОбразцам.ТипОбразца,
	               |	ВТ_ОстаткиПоОбразцам.КоличествоОстаток,
	               |	ВЫБОР
	               |		КОГДА ВТ_ОстаткиПоОбразцам.КоличествоОстаток = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_ОстаткиПоОбразцам.КоличествоОстаток / ВТ_РазмерКвоты.РазмерКвоты * 100
	               |	КОНЕЦ КАК ПроцентныйОстаток
	               |ПОМЕСТИТЬ ВТ_ПроцентныйОстаток
	               |ИЗ
	               |	ВТ_ОстаткиПоОбразцам КАК ВТ_ОстаткиПоОбразцам
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РазмерКвоты КАК ВТ_РазмерКвоты
	               |		ПО ВТ_ОстаткиПоОбразцам.Разрешение = ВТ_РазмерКвоты.Разрешение
	               |			И ВТ_ОстаткиПоОбразцам.Образец = ВТ_РазмерКвоты.Образец
	               |			И ВТ_ОстаткиПоОбразцам.ТипОбразца = ВТ_РазмерКвоты.ТипОбразца
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПроцентныйОстаток.Разрешение КАК Разрешение,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_ПроцентныйОстаток.Разрешение) КАК ПредставлениеРазрешение,
	               |	ВТ_ПроцентныйОстаток.НомерСтроки КАК НомерСтроки,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_ПроцентныйОстаток.Образец) КАК ПредставлениеОбразец,
	               |	ВТ_ПроцентныйОстаток.ТипОбразца,
	               |	ВТ_ПроцентныйОстаток.КоличествоОстаток
	               |ИЗ
	               |	ВТ_ПроцентныйОстаток КАК ВТ_ПроцентныйОстаток
	               |ГДЕ
	               |	ВТ_ПроцентныйОстаток.ПроцентныйОстаток <= &МинимальныйПроцентныйОстаток
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Разрешение,
	               |	НомерСтроки
	               |ИТОГИ ПО
	               |	Разрешение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_РазмерКвоты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ОстаткиПоОбразцам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ПроцентныйОстаток";
				   
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаРазрешение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаРазрешение.Следующий() Цикл
	    ОсновнойТекстПисьма = ОсновнойТекстПисьма + ВыборкаРазрешение.ПредставлениеРазрешение + ":" + Символы.ПС; 
		ВыборкаДетальныеЗаписи = ВыборкаРазрешение.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОсновнойТекстПисьма = ОсновнойТекстПисьма + Символы.Таб + ВыборкаДетальныеЗаписи.НомерСтроки + ". образец: " + ВыборкаДетальныеЗаписи.ПредставлениеОбразец + "/ тип: " + ВыборкаДетальныеЗаписи.ТипОбразца + "/ количество остаток: " + ВыборкаДетальныеЗаписи.КоличествоОстаток + Символы.ПС;
		КонецЦикла;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ОсновнойТекстПисьма) Тогда
		
		ТекстПисьма = ЗаголовокТекста + ОсновнойТекстПисьма;
		СистемнаяУчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		
		ДоступныеУчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина,,Ложь);
		Если ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Не обнаружены доступные учетные записи электронной почты, обратитесь к администратору системы.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		//ОтправитьПочтовоеСообщение
		ПараметрыПисьма = СформироватьПараметрыПисьма(Тема, ТекстПисьма, ДоступныеУчетныеЗаписи);
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(СистемнаяУчетнаяЗапись, ПараметрыПисьма);
		
	КонецЕсли; 

КонецПроцедуры

Процедура ОтправитьУведомлениеОбОкончанииСрокаДействия() Экспорт
	
	Тема = "Автоматическое уведомление об окончании срока действия разрешений";
	ЗаголовокТекстаЧасть1 = "Окончен срок действия по разрешениям:" + Символы.ПС;
	ЗаголовокТекстаЧасть2 = "Близется срок окончания действия по разрешениям:" + Символы.ПС;
	ОсновнойТекстПисьмаЧасть1 = "";
	ОсновнойТекстПисьмаЧасть2 = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Запрос.Текст = "ВЫБРАТЬ
	               |	Разрешения.Ссылка КАК ДокументРазрешение,
	               |	ПРЕДСТАВЛЕНИЕ(Разрешения.Ссылка) КАК ПредставлениеРазрешение,
	               |	Разрешения.Valid,
	               |	ВЫБОР
	               |		КОГДА Разрешения.Valid = &ТекущаяДата
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Closed
	               |ИЗ
	               |	Документ.Разрешения КАК Разрешения
	               |ГДЕ
	               |	(Разрешения.Valid = &ТекущаяДата
	               |			ИЛИ Разрешения.Valid = ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, 14))
	               |	И НЕ Разрешения.Closed
	               |	И Разрешения.Проведен";
				   
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Closed Тогда	 
			ОсновнойТекстПисьмаЧасть1 = ОсновнойТекстПисьмаЧасть1 + Выборка.ПредставлениеРазрешение + ";" + Символы.ПС;
			ДокументОбъект = Выборка.ДокументРазрешение.ПолучитьОбъект();
			ДокументОбъект.Closed = Выборка.Closed;
			ДокументОбъект.ТипПредупреждения = ПредопределенноеЗначение("Перечисление.ТипыПредупреждения.ПустаяСсылка"); 
			ДокументОбъект.Записать();
		Иначе
			ОсновнойТекстПисьмаЧасть2 = ОсновнойТекстПисьмаЧасть2 + Выборка.ПредставлениеРазрешение + ";" + Символы.ПС;
		КонецЕсли;
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ОсновнойТекстПисьмаЧасть1) Тогда
		ТекстПисьмаЧасть1 = ЗаголовокТекстаЧасть1 + ОсновнойТекстПисьмаЧасть1;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ОсновнойТекстПисьмаЧасть2) Тогда
		ТекстПисьмаЧасть2 = ЗаголовокТекстаЧасть2 + ОсновнойТекстПисьмаЧасть2;
	КонецЕсли; 
	
	ТекстПисьма = ТекстПисьмаЧасть1 + ТекстПисьмаЧасть2;
	
	Если ЗначениеЗаполнено(ТекстПисьма) Тогда
	
		СистемнаяУчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		
		ДоступныеУчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина,,Ложь);
		Если ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Не обнаружены доступные учетные записи электронной почты, обратитесь к администратору системы.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		//ОтправитьПочтовоеСообщение
		ПараметрыПисьма = СформироватьПараметрыПисьма(Тема, ТекстПисьма, ДоступныеУчетныеЗаписи);
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(СистемнаяУчетнаяЗапись, ПараметрыПисьма);
		
	КонецЕсли; 

КонецПроцедуры

// Проверяет возможность отправления письма и если
// это возможно - формирует параметры отправки.
//
Функция СформироватьПараметрыПисьма(Тема, ТекстПисьма, ПочтовыйАдресаПолучателей)
	
	ПараметрыПисьма = Новый Структура;
	Кому = Новый Массив;
	ТелоПисьма = Новый ФорматированныйДокумент;
	ВложенияДляПисьма = Новый Структура;
	
	Для каждого Получатель Из ПочтовыйАдресаПолучателей Цикл
		Если СтрНайти(Получатель.Адрес, "@") = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Неверный адрес электронной почты'"),, "ПочтовыйАдресаПолучателей[" + Формат(ПочтовыйАдресаПолучателей.Индекс(Получатель), "ЧГ=0") + "].Адрес");
			Результат = Ложь;
		КонецЕсли;
		Кому.Добавить(Новый Структура("Адрес, Представление", Получатель.Адрес, Получатель.Ссылка.ИмяПользователя));
	КонецЦикла;
	
	ПараметрыПисьма.Вставить("Кому",		Кому);
	ПараметрыПисьма.Вставить("Тема",		Тема);
	ПараметрыПисьма.Вставить("Тело",		ТекстПисьма);
	ПараметрыПисьма.Вставить("ТипТекста",	ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.ПростойТекст"));
	ПараметрыПисьма.Вставить("Важность",	ВажностьИнтернетПочтовогоСообщения.Наивысшая);
	
	Возврат ПараметрыПисьма;
	
КонецФункции
