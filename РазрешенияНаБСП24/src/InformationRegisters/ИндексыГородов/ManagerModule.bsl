#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗагрузитьГородаИзФайлаДлительнаяОперация(СтруктураПараметров, АдресХранилища) Экспорт
	
	ТаблицаДанныхФайла = ПолучитьТаблицуДанныхФайла(СтруктураПараметров.ТекстовыйДокумент);
	МассивРезультатов = ПолучитьРезультатыЗапросаПоГородам(ТаблицаДанныхФайла);
	
	ВыборкаЕстьТолькоВФайле 	= МассивРезультатов[3].Выбрать();
	ВыборкаЕстьТолькоВРегистре 	= МассивРезультатов[4].Выбрать();
	
	Отказ = Ложь;
	
	УдалитьЛишниеЗаписиРегистра(ВыборкаЕстьТолькоВРегистре, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьЗаписиРегистра(ВыборкаЕстьТолькоВФайле, Отказ);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДанныхФайла(ТекстовыйДокумент)
	
	ТаблицаДанныхФайла = Новый ТаблицаЗначений;
	ТаблицаДанныхФайла.Колонки.Добавить("Город", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(30, ДопустимаяДлина.Переменная)));
	ТаблицаДанныхФайла.Колонки.Добавить("Индекс", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(9, ДопустимаяДлина.Переменная)));
	
	Для НомерСтроки = 2 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		Если НомерСтроки % 500 = 0 Тогда
			ДлительныеОперации.СообщитьПрогресс(Цел(НомерСтроки / ТекстовыйДокумент.КоличествоСтрок() * 100), "Чтение данных файла");
		КонецЕсли;
		
		СтрокаФайла = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаФайла, """;""", , Истина);
		
		Если МассивПодстрок.Количество() < 12 Или ПустаяСтрока(МассивПодстрок[1]) Или ПустаяСтрока(МассивПодстрок[10]) Или ПустаяСтрока(МассивПодстрок[11]) Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			ИндексНижняяГраница 	= Число(МассивПодстрок[10]);
			ИндексВерхняяГраница 	= Число(МассивПодстрок[11]);
		Исключение
			Продолжить;
		КонецПопытки;
		
		Для Индекс = ИндексНижняяГраница По ИндексВерхняяГраница Цикл
			СтрокаТаблицы = ТаблицаДанныхФайла.Добавить();
			СтрокаТаблицы.Город = МассивПодстрок[1];
			СтрокаТаблицы.Индекс = Формат(Индекс, "ЧГ=0");
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаДанныхФайла;
	
КонецФункции

Функция ПолучитьРезультатыЗапросаПоГородам(ТаблицаДанныхФайла)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДанныхФайла", ТаблицаДанныхФайла);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанныхФайла.Город,
	|	ТаблицаДанныхФайла.Индекс
	|ПОМЕСТИТЬ ГородаИзФайла
	|ИЗ
	|	&ТаблицаДанныхФайла КАК ТаблицаДанныхФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГородаИзФайла.Город,
	|	ГородаИзФайла.Индекс,
	|	1 КАК Группировка
	|ПОМЕСТИТЬ Города
	|ИЗ
	|	ГородаИзФайла КАК ГородаИзФайла
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИндексыГородов.Город,
	|	ИндексыГородов.Индекс,
	|	-1
	|ИЗ
	|	РегистрСведений.ИндексыГородов КАК ИндексыГородов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Города.Город,
	|	Города.Индекс,
	|	СУММА(Города.Группировка) КАК Группировка
	|ПОМЕСТИТЬ ГородаГруппировка
	|ИЗ
	|	Города КАК Города
	|
	|СГРУППИРОВАТЬ ПО
	|	Города.Город,
	|	Города.Индекс
	|
	|ИМЕЮЩИЕ
	|	СУММА(Города.Группировка) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГородаГруппировка.Город,
	|	ГородаГруппировка.Индекс
	|ИЗ
	|	ГородаГруппировка КАК ГородаГруппировка
	|ГДЕ
	|	ГородаГруппировка.Группировка = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГородаГруппировка.Город,
	|	ГородаГруппировка.Индекс
	|ИЗ
	|	ГородаГруппировка КАК ГородаГруппировка
	|ГДЕ
	|	ГородаГруппировка.Группировка = -1";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

Процедура УдалитьЛишниеЗаписиРегистра(ВыборкаЕстьТолькоВРегистре, Отказ)
	
	КоличествоЗаписей 	= ВыборкаЕстьТолькоВРегистре.Количество();
	Индекс 				= 1;
	
	Пока ВыборкаЕстьТолькоВРегистре.Следующий() Цикл
		
		Если Индекс % 500 = 0 Тогда
			ДлительныеОперации.СообщитьПрогресс(Цел(Индекс / КоличествоЗаписей * 100), "Удаление лишних записей");
		КонецЕсли;
		
		Запись = РегистрыСведений.ИндексыГородов.СоздатьМенеджерЗаписи();
		Запись.Город 	= ВыборкаЕстьТолькоВРегистре.Город;
		Запись.Индекс 	= ВыборкаЕстьТолькоВРегистре.Индекс;
		
		Попытка
			Запись.Удалить();
		Исключение
			Сообщить(ОписаниеОшибки());
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиРегистра(ВыборкаЕстьТолькоВФайле, Отказ)
	
	КоличествоЗаписей 	= ВыборкаЕстьТолькоВФайле.Количество();
	Индекс 				= 1;
	
	Пока ВыборкаЕстьТолькоВФайле.Следующий() Цикл
		
		Если Индекс % 500 = 0 Тогда
			ДлительныеОперации.СообщитьПрогресс(Цел(Индекс / КоличествоЗаписей * 100), "Добавление новых записей");
		КонецЕсли;
		
		Запись = РегистрыСведений.ИндексыГородов.СоздатьМенеджерЗаписи();
		Запись.Город 	= ВыборкаЕстьТолькоВФайле.Город;
		Запись.Индекс 	= ВыборкаЕстьТолькоВФайле.Индекс;
		
		Попытка
			Запись.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
			Отказ = Истина;
			Возврат;
		КонецПопытки;		
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти