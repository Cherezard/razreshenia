#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗагрузитьАдресаИзФайлаДлительнаяОперация(СтруктураПараметров, АдресХранилища) Экспорт
	
	ТекстовыйДокумент 	= СтруктураПараметров.ТекстовыйДокумент;
	КоличествоСтрок 	= ТекстовыйДокумент.КоличествоСтрок();
	
	Для НомерСтроки = 2 По КоличествоСтрок Цикл
		
		Если НомерСтроки % 500 = 0 Тогда
			ДлительныеОперации.СообщитьПрогресс(Цел(НомерСтроки / КоличествоСтрок * 100));
		КонецЕсли;
		
		СтрокаФайла = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаФайла, ";", , Истина);
		
		Если Не ПроверитьНаличиеОбязательныхПолей(МассивПодстрок, НомерСтроки) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Подстрока Из МассивПодстрок Цикл
			Подстрока = СтроковыеФункцииКлиентСервер.СтрокаЛатиницей(Подстрока);	
		КонецЦикла;
		
		Если Не Справочники.Клиники.НайтиПоРеквизиту("НаименованиеТранслит", МассивПодстрок[2]).Пустая() Тогда
			Сообщить("Строка №" + НомерСтроки + " не загружена! Адрес с наименованием """ + МассивПодстрок[2] + """ уже существует!");
			Продолжить;
		КонецЕсли;
		
		Адрес = СоздатьАдрес(МассивПодстрок);
		Если Адрес = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		КонтактноеЛицо = СоздатьКонтактноеЛицо(МассивПодстрок, Адрес.Ссылка);
		Если Адрес = Неопределено Тогда
			Продолжить;
		КонецЕсли;
				
		Адрес.КонтактноеЛицо = КонтактноеЛицо;
		Попытка
			Адрес.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПроверитьНаличиеОбязательныхПолей(МассивПодстрок, НомерСтроки)
	
	Если МассивПодстрок.Количество() < 14 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивОбязательныхПолей = Новый Массив;
	МассивОбязательныхПолей.Добавить(Новый Структура("Индекс, Имя", 2, "Название компании"));
	МассивОбязательныхПолей.Добавить(Новый Структура("Индекс, Имя", 6, "Город"));
	МассивОбязательныхПолей.Добавить(Новый Структура("Индекс, Имя", 11, "Контактное лицо"));
	МассивОбязательныхПолей.Добавить(Новый Структура("Индекс, Имя", 12, "Номер телефона"));
	
	ОбязательныеПоляЗаполнены = Истина;
	Для Каждого ОбязательноеПоле Из МассивОбязательныхПолей Цикл
		Если ПустаяСтрока(МассивПодстрок[ОбязательноеПоле.Индекс]) Тогда
			Сообщить("Строка №" + НомерСтроки + " не загружена! Не заполнено обязательное поле: " + ОбязательноеПоле.Имя);
			ОбязательныеПоляЗаполнены = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбязательныеПоляЗаполнены;
	
КонецФункции

Функция СоздатьАдрес(МассивПодстрок)
	
	Адрес = Справочники.Клиники.СоздатьЭлемент();
	
	Адрес.Наименование 			= МассивПодстрок[2];
	Адрес.НаименованиеТранслит 	= Адрес.Наименование;
	Адрес.Адрес 				= МассивПодстрок[3] + МассивПодстрок[4] + МассивПодстрок[5];
	Адрес.АдресТранслит 		= Адрес.Адрес;
	Адрес.ГородТранслит 		= МассивПодстрок[6];
	Адрес.Индекс 				= МассивПодстрок[8];
	Адрес.ИНН 					= МассивПодстрок[10];
	Адрес.Страна 				= Справочники.СтраныМира.Россия;
	
	Попытка
		Адрес.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат Адрес;
	
КонецФункции

Функция СоздатьКонтактноеЛицо(МассивПодстрок, Адрес)
	
	КонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
	
	КонтактноеЛицо.Владелец = Адрес;
	
	КонтактноеЛицо.Наименование 		= МассивПодстрок[11];
	КонтактноеЛицо.НаименованиеТранслит = КонтактноеЛицо.Наименование;
	КонтактноеЛицо.ТелефонныйКод 		= Лев(МассивПодстрок[12], 7);
	КонтактноеЛицо.Телефон 				= Сред(МассивПодстрок[12], 8);
	
	УправлениеКонтактнойИнформациейРазрешения1C.ДобавитьАдресЭлектроннойПочтыКонтактногоЛица(КонтактноеЛицо, МассивПодстрок[13]);
	
	Попытка
		КонтактноеЛицо.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат КонтактноеЛицо.Ссылка;
	
КонецФункции

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьПредопределеннойКлиники() Экспорт
	
	//Адрес = Справочники.Клиники.TNT.ПолучитьОбъект();
	//Адрес.НаименованиеТранслит 	= Адрес.Наименование;
	//Адрес.КлиентскийНомер 		= "2659";	
	//Адрес.Город 				= "MOSCOW";
	//Адрес.ГородТранслит 		= "MOSCOW";
	//Адрес.Индекс 				= "123458";
	//Адрес.Адрес 				= "2nd Lykovskaya st., 63";
	//Адрес.АдресТранслит 		= "2nd Lykovskaya st., 63";
	//Адрес.Страна 				= Справочники.СтраныМира.Россия;
	//Адрес.УстановитьНовыйКод();
	//
	//ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Адрес);
	//
	//КонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
	//КонтактноеЛицо.Владелец 			= Адрес.Ссылка;
	//КонтактноеЛицо.Наименование 		= "Ресепшн";
	//КонтактноеЛицо.НаименованиеТранслит = "Reception";
	//КонтактноеЛицо.ТелефонныйКод 		= "8495";
	//КонтактноеЛицо.Телефон 				= "7972700";
	//КонтактноеЛицо.УстановитьНовыйКод();
	//
	//ОбновлениеИнформационнойБазы.ЗаписатьОбъект(КонтактноеЛицо);
	//
	//Адрес.КонтактноеЛицо = КонтактноеЛицо.Ссылка;
	//
	//ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Адрес);
	
КонецПроцедуры

#КонецОбласти

