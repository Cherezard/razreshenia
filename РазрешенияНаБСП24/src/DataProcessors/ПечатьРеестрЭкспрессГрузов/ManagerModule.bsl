
#Область СлужебныеПроцедурыИФункции

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрЭкспрессГрузов") Тогда
		СтруктураТипов = ОбщегоНазначенияРазрешения.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РеестрЭкспрессГрузов",
			НСтр("ru='Реестр экспресс грузов'"),
			СформироватьПечатнуюФормуРеестЭкспрессГрузов(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
		
	//ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#КонецОбласти

#Область РеестрЭкспрессГрузов

Функция СформироватьПечатнуюФормуРеестЭкспрессГрузов(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_РеестрЭкспрессГрузов";
	
	НомерТипаДокумента = 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыРеестрЭкспрессГрузов(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументРеестрЭкспрессГрузов(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати, ПараметрыПечати);

	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьРеквизитыШапкиРеестрЭкспрессГрузов(ДанныеПечати, Макет, ТабличныйДокумент)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРеестрЭкспрессГрузов.ПФ_MXL_РеестрЭкспрессГрузов");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// Вывод шапки.
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.Дата = Формат(ДанныеПечати.Дата, "ДФ=ddMMyy");
	ОбластьМакета.Параметры.ТекущаяДата = Формат(ТекущаяДатаСеанса(),  "ДФ=dd.MM.yyyy");
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаРеестрЭкспрессГрузов(ДанныеПечати, Макет, ТабличныйДокумент, СтруктураОбщихИтогов)
	
	// Вывод итогов.
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
	ОбластьПодвал.Параметры.ПаспортСотрудникаТаможни = "" + ДанныеПечати.СерияПаспорта + " " + ДанныеПечати.НомерПаспорта + " от " + Формат(ДанныеПечати.ДатаВыдачиПаспорта, "ДФ=dd.MM.yyyy");
	ОбластьПодвал.Параметры.ОбщееКоличествоГрузов		= СтруктураОбщихИтогов.ОбщееКоличествоГрузов;
	ОбластьПодвал.Параметры.ОбщийВесБрутто				= СтруктураОбщихИтогов.ОбщийВесБрутто;
	ОбластьПодвал.Параметры.ОбщийВесНетто				= СтруктураОбщихИтогов.ОбщийВесНетто;
	ОбластьПодвал.Параметры.ОбщаяТаможеннаяСтоимость	= СтруктураОбщихИтогов.ОбщаяТаможеннаяСтоимость;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументРеестрЭкспрессГрузов(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати, ПараметрыПечати)

	Если ПараметрыПечати.Свойство("ОтображатьФаксимиле") Тогда
		ОтображатьФаксимиле = ПараметрыПечати.ОтображатьФаксимиле;
	Иначе
		ОтображатьФаксимиле = Ложь;
	КонецЕсли; 
	
	ШаблоныОшибок = Новый Структура;
	ШаблоныОшибок.Вставить("Отправления", НСтр("ru = 'В документе %1 отсутствуют отправления по выбранному разрешению. Печать реестра экспресс грузов не требуется'"));
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	Отправления = ДанныеДляПечати.РезультатПоОтправления.Выгрузить();
	Накладные = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Отказ = Ложь;
		
		СтруктураПоиска = Новый Структура("ДокументСсылка", ДанныеПечати.ДокументСсылка);
		
		ТаблицаОтправления = Отправления.НайтиСтроки(СтруктураПоиска);
		ТаблицаНакладные = Накладные.НайтиСтроки(СтруктураПоиска);
		
		ПроверкаЗаполненияДокумента(ДанныеПечати, ТаблицаНакладные, ТаблицаОтправления, ШаблоныОшибок, Отказ);
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		МассивРазрешений	 = Новый Массив;
		МассивПроверкиВывода = Новый Массив;
		
		НомерНакладной	 = ДанныеПечати.Номер;
		КодЭкспрессГруза = ДанныеПечати.КодЭкспрессГруза;
		
		Макет = Новый ТабличныйДокумент;
		ЗаполнитьРеквизитыШапкиРеестрЭкспрессГрузов(ДанныеПечати, Макет, ТабличныйДокумент);
		
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьВерхнийКолонтитул = Макет.ПолучитьОбласть("ВерхнийКолонтитулСтраницы");
		ОбластьСтрока	= Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьФаксимиле = Макет.ПолучитьОбласть("ОбластьФаксимиле");
		
		СтруктураПоиска = Новый Структура("ДокументСсылка", ДанныеПечати.ДокументСсылка); 
		ТаблицаОтправления = Отправления.НайтиСтроки(СтруктураПоиска);
				
		//Вывод заголовка таблицы
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		КоличествоСтрок = ТаблицаОтправления.Количество();
		
		//Вывод строк.
		НомерСтроки				= 0;
		ОбщееКоличествоГрузов	= 0;
		ОбщийВесБрутто			= 0;
		ОбщийВесНетто			= 0;
		ОбщаяТаможеннаяСтоимость = 0;
		
		Для каждого СтрокаОтправление Из ТаблицаОтправления Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаОтправление);
			ОбластьСтрока.Параметры.ОбщийНомерНакладной = НомерНакладной;
			ОбластьСтрока.Параметры.НомерСтроки			= НомерСтроки;
			ОбластьСтрока.Параметры.КодЭкспрессГруза	= КодЭкспрессГруза;
			ОбластьСтрока.ПараМетры.ФактурнаяСтоимостьСВалютой = Строка(СтрокаОтправление.ФактурнаяСтоимость) + " " + СтрокаОтправление.Валюта;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Накладная", СтрокаОтправление.Накладная);
			
			СписокРазрешений = Накладные.Скопировать(ПараметрыОтбора,"Разрешение");
			СписокРазрешений.Свернуть("Разрешение");
			
			СписокДокументов = "";
			Разделитель = "";
			Для каждого СтрокаСписка Из СписокРазрешений Цикл
				СписокДокументов = СписокДокументов + Разделитель + "Разрешение МЗ РФ № " + СтрокаСписка.Разрешение.Номер + " от " + Формат(СтрокаСписка.Разрешение.Issued, "ДФ=dd.MM.yyyy");
				Разделитель = "/";
			КонецЦикла; 
			ОбластьСтрока.Параметры.СписокДокументов = СписокДокументов;
			
			СписокОбразцов = Накладные.Скопировать(ПараметрыОтбора,"Образец, Списание");
			СписокОбразцов.Свернуть("Образец", "Списание");
			
			Образцы = "";
			Разделитель = "";
			Для каждого СтрокаСписка Из СписокОбразцов Цикл
				
				Если СтрокаСписка.Списание = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если ДанныеПечати.ПодробноеОписаниеОбразцов Тогда
					Образцы = Образцы + Разделитель + СтрокаСписка.Образец + "-" + СтрокаСписка.Списание + "шт.";
				Иначе
					Образцы = Образцы + Разделитель + СтрокаСписка.Образец;
				Конецесли ;
				
				Разделитель = "/";
			КонецЦикла;
			ОбластьСтрока.Параметры.Образцы = Образцы;
			
			Если ДанныеПечати.ПодробноеОписаниеОбразцов Тогда 
				
				ТаблицаОстатков = Накладные.Скопировать(ПараметрыОтбора,"Разрешение, Образец, КоличествоОстаток");
				ТаблицаОстатков.Свернуть("Разрешение, Образец", "КоличествоОстаток");
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ТаблицаОстатков", ТаблицаОстатков);
				Запрос.УстановитьПараметр("МассивРазрешений", МассивРазрешений);
				Запрос.Текст = "ВЫБРАТЬ
				               |	ТаблицаОстатков.Разрешение,
				               |	ТаблицаОстатков.Образец,
				               |	ТаблицаОстатков.КоличествоОстаток КАК Остаток
				               |ПОМЕСТИТЬ ВТ_Остатки
				               |ИЗ
				               |	&ТаблицаОстатков КАК ТаблицаОстатков
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ВТ_Остатки.Разрешение КАК Разрешение,
				               |	ВТ_Остатки.Образец КАК Образец,
				               |	ВТ_Остатки.Остаток КАК Остаток
				               |ИЗ
				               |	ВТ_Остатки КАК ВТ_Остатки
				               |ГДЕ
				               |	НЕ ВТ_Остатки.Разрешение В (&МассивРазрешений)
				               |ИТОГИ
				               |	СУММА(Остаток)
				               |ПО
				               |	Разрешение,
				               |	Образец";
				
				РезультатЗапроса = Запрос.Выполнить();
				ВыборкаРазрешение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Остатки = "";
				Разделитель = "";
				ПереносСтроки = "";
				Пока ВыборкаРазрешение.Следующий() Цикл
					
					Если МассивРазрешений.Найти(ВыборкаРазрешение.Разрешение) = Неопределено Тогда
						МассивРазрешений.Добавить(ВыборкаРазрешение.Разрешение);
					Иначе
						Продолжить;			
					КонецЕсли; 
					
					Остатки = Остатки + ПереносСтроки + "Остатки по " + "Разрешению № " + ВыборкаРазрешение.Разрешение.Номер + ":";
					ВыборкаОбразец = ВыборкаРазрешение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаОбразец.Следующий() Цикл
						Остатки = Остатки + Разделитель + ВыборкаОбразец.Образец + " " + ВыборкаОбразец.Остаток + "шт."; 
						Разделитель = ";";
					КонецЦикла;
					
					ПереносСтроки = Символы.ПС;
					
				КонецЦикла;
				
				ОбластьСтрока.Параметры.Остатки = Остатки;
				
			КонецЕсли;
			
			ОбщееКоличествоГрузов	= ОбщееКоличествоГрузов + СтрокаОтправление.КоличествоГруза;
			ОбщийВесБрутто			= ОбщийВесБрутто + СтрокаОтправление.ВесБрутто;
			ОбщийВесНетто			= ОбщийВесНетто + СтрокаОтправление.ВесНетто; 
			ОбщаяТаможеннаяСтоимость = ОбщаяТаможеннаяСтоимость + СтрокаОтправление.ТаможеннаяСтоимость;
			
			МассивПроверкиВывода.Очистить();
			МассивПроверкиВывода.Добавить(ОбластьСтрока);
			
			Если КоличествоСтрок = НомерСтроки Тогда
				МассивПроверкиВывода.Добавить(ОбластьПодвал);
			КонецЕсли; 
			
			Если ОтображатьФаксимиле Тогда
				МассивПроверкиВывода.Добавить(ОбластьФаксимиле);
			КонецЕсли; 
			
			Если Не ТабличныйДокумент.ПроверитьВывод(МассивПроверкиВывода) тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьВерхнийКолонтитул.Параметры.Заполнить(ДанныеПечати);
				ОбластьВерхнийКолонтитул.Параметры.Дата = Формат(ДанныеПечати.Дата, "ДФ=ddMMyy");
				ТабличныйДокумент.Вывести(ОбластьВерхнийКолонтитул);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла; 
		
		СтруктураОбщихИтогов = Новый Структура;
		СтруктураОбщихИтогов.Вставить("ОбщееКоличествоГрузов", ОбщееКоличествоГрузов);
		СтруктураОбщихИтогов.Вставить("ОбщийВесБрутто", ОбщийВесБрутто);
		СтруктураОбщихИтогов.Вставить("ОбщийВесНетто", ОбщийВесНетто);
		СтруктураОбщихИтогов.Вставить("ОбщаяТаможеннаяСтоимость", ОбщаяТаможеннаяСтоимость);
		
		ЗаполнитьРеквизитыПодвалаРеестрЭкспрессГрузов(ДанныеПечати, Макет, ТабличныйДокумент, СтруктураОбщихИтогов);
		
		Если ПараметрыПечати.Свойство("АдресФаксимильнойПодписи") Тогда
			ВывестиФаксимилеВТабличныйДокумент(Макет, ОбластьФаксимиле, "ФаксимилеПодпись", ПараметрыПечати.АдресФаксимильнойПодписи, ОтображатьФаксимиле);
		КонецЕсли;
		Если ПараметрыПечати.Свойство("АдресФаксимильнойПечати") Тогда
			ВывестиФаксимилеВТабличныйДокумент(Макет, ОбластьФаксимиле, "ФаксимилеПечать", ПараметрыПечати.АдресФаксимильнойПечати, ОтображатьФаксимиле);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьФаксимиле);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.ДокументСсылка);
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит факсимиле в табличный документ, заменяя переданную область картинкой факсимиле.
//
// Параметры:
// 		Макет - Макет - Макет печатной формы
// 		ОбластьМакета - ТекстовыйДокумент - Область макета печатной формы
// 		ИмяРисунка - Строка - Название рисунка
// 		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - Содержит ссылку на организацию для получения факсимиле
// 		ОтображатьФаксимиле - Булево - Признак отображения факсимиле
//
Процедура ВывестиФаксимилеВТабличныйДокумент(Макет, ОбластьМакета, ИмяРисунка, ФайлКартинки, ОтображатьФаксимиле)
	
	Если НЕ ОтображатьФаксимиле Тогда
		Возврат
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ФайлКартинки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru ='Факсимиле для манифеста не указано. 
			|Укажите файл с факсимиле в разделе ""Настройка печати"".'"));
	КонецЕсли;

	Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРисунка, ОбластьМакета.Рисунки) Тогда
		// Картинки Факсимиле в этой области макета нет.
		
		Если Макет.Области.Найти("ОбластьФаксимиле") <> Неопределено Тогда
			
			// Проверить картинку факсимиле в области "ОбластьФаксимиле"
			ОбластьМакетаФаксимиле = Макет.ПолучитьОбласть("ОбластьФаксимиле");
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРисунка, ОбластьМакетаФаксимиле.Рисунки)
				И ЗначениеЗаполнено(ФайлКартинки) Тогда
				
				ОбластьМакета = ОбластьМакетаФаксимиле;
			Иначе
				Возврат;
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ФайлКартинки) Тогда
		ОбластьМакета.Рисунки.Удалить(ОбластьМакета.Рисунки[ИмяРисунка]);
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ФайлКартинки);
	
	Если ТипЗнч(ДвоичныеДанныеФайла) = Тип("Картинка") Тогда
		Картинка = ДвоичныеДанныеФайла;
	ИначеЕсли ТипЗнч(ДвоичныеДанныеФайла) = Тип("ДвоичныеДанные") Тогда
		Картинка = Новый Картинка(ДвоичныеДанныеФайла);
	Иначе
		Картинка = Новый Картинка;
	КонецЕсли; 
	
	ОбластьМакета.Рисунки[ИмяРисунка].Картинка = Картинка;
	
	УдалитьИзВременногоХранилища(ФайлКартинки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Прочее

Процедура ПроверкаЗаполненияДокумента(ДанныеПечати, ТаблицаНакладные, ТаблицаОтправления, ШаблоныОшибок, Отказ);
	
	Если ТаблицаОтправления <> Неопределено И ТаблицаОтправления.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблоныОшибок.Отправления, ДанныеПечати.ДокументСсылка), ДанныеПечати.ДокументСсылка);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
