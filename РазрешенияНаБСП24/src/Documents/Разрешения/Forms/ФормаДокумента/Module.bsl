
#Область ПроцедурыИФункцииОбщегоНазначения

&НаСервере
Процедура ПолучитьОстатки()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбразцов", Объект.Образцы.Выгрузить());
	Запрос.УстановитьПараметр("Ссылка",			 Объект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	РазрешенияОписаниеОбразцов.Образец,
	               |	РазрешенияОписаниеОбразцов.ТипОбразца,
	               |	РазрешенияОписаниеОбразцов.Квота,
	               |	РазрешенияОписаниеОбразцов.МинимальныйОстаток,
	               |	РазрешенияОписаниеОбразцов.НулевойОстаток,
	               |	РазрешенияОписаниеОбразцов.Комментарий,
	               |	&Ссылка КАК Разрешение
	               |ПОМЕСТИТЬ ВТ_ТаблицаОбразцов
	               |ИЗ
	               |	&ТаблицаОбразцов КАК РазрешенияОписаниеОбразцов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаОбразцов.Образец,
	               |	ВТ_ТаблицаОбразцов.ТипОбразца,
	               |	ВТ_ТаблицаОбразцов.Квота,
	               |	ВТ_ТаблицаОбразцов.МинимальныйОстаток,
	               |	ВТ_ТаблицаОбразцов.НулевойОстаток,
	               |	ВТ_ТаблицаОбразцов.Комментарий,
	               |	ОстаткиПоКвотеОстатки.КоличествоОстаток КАК Остаток
	               |ИЗ
	               |	ВТ_ТаблицаОбразцов КАК ВТ_ТаблицаОбразцов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКвоте.Остатки КАК ОстаткиПоКвотеОстатки
	               |		ПО ВТ_ТаблицаОбразцов.Образец = ОстаткиПоКвотеОстатки.Образец
	               |			И ВТ_ТаблицаОбразцов.ТипОбразца = ОстаткиПоКвотеОстатки.ТипОбразца
	               |			И ВТ_ТаблицаОбразцов.Разрешение = ОстаткиПоКвотеОстатки.Разрешение";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Объект.Образцы.Очистить();
	Объект.Образцы.Загрузить(ТаблицаРезультат);
	
КонецПроцедуры   

&НаСервере
Процедура ОбразецПриИзмененииНаСервере(СтруктураДанных)
	
	СтруктураДанных.Вставить("ТипОбразца", СтруктураДанных.Образец.ТипОбразца); 
	
КонецПроцедуры

&НаСервере
Процедура StudyNumberПриИзмененииНаСервере()
	
	Клиники.Параметры.УстановитьЗначениеПараметра("Протокол", Объект.StudyNumber);
	Элементы.Клиники.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлажокУведомление(ЗначениеФлажка)
	
	Для каждого Строка Из Объект.Образцы Цикл
		Строка.МинимальныйОстаток = ЗначениеФлажка;
		Строка.НулевойОстаток = ЗначениеФлажка;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Пользователи.РолиДоступны("ПолныеПрава") тогда 
		Элементы.Alert.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
	    Объект.ОтветственноеЛицо = Пользователи.ТекущийПользователь();	
	КонецЕсли; 
	
	Если Не Параметры.Ключ.Пустая() Тогда  
		ПолучитьОстатки();
	КонецЕсли;
		
	Клиники.Параметры.УстановитьЗначениеПараметра("Протокол", Объект.StudyNumber);
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.БазоваяФункциональность
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

// Процедура обработчик события ПриОткрытии
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры // ПриОткрытии()

// Процедура обработчик события ОбработкаОповещения.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовТабличнойЧастиОбразцы

&НаКлиенте
Процедура ОписаниеОбразцовОбразецПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Образцы.ТекущиеДанные;
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Образец", СтрокаТабличнойЧасти.Образец);
	
	ОбразецПриИзмененииНаСервере(СтруктураДанных);
	
	СтрокаТабличнойЧасти.ТипОбразца = СтруктураДанных.ТипОбразца;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандыТабличнойЧастиОбразцы

&НаКлиенте
Процедура ОбразцыНулевойОстатокПриИзменении(Элемент)
	
	а = 10;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)

	УстановитьСнятьФлажокУведомление(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)

	УстановитьСнятьФлажокУведомление(Ложь);
	
КонецПроцедуры
	
#КонецОбласти  

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура StudyNumberПриИзменении(Элемент)
	
	StudyNumberПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
