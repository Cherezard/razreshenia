
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОстаткиПоКвоте.Записывать = Истина;
	Движения.ОстаткиПоКвоте.Очистить();
	Для Каждого ТекСтрокаОписаниеОбразцов Из Образцы Цикл
		Движение = Движения.ОстаткиПоКвоте.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Образец = ТекСтрокаОписаниеОбразцов.Образец;
		Движение.ТипОбразца = ТекСтрокаОписаниеОбразцов.ТипОбразца;
		Движение.Разрешение = Ссылка;
		Движение.Количество = ТекСтрокаОписаниеОбразцов.Квота;
	КонецЦикла;
	Движения.Записать();

	НаборЗаписей = РегистрыСведений.УведомлениеПоОстаткамКвоты.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Разрешение.Установить(Ссылка);
	Если Не Closed Тогда
		Для каждого ТекСтрокаОбразцов Из Образцы Цикл
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Разрешение = Ссылка; 
			НоваяЗапись.Образец = ТекСтрокаОбразцов.Образец; 
			НоваяЗапись.ТипОбразца = ТекСтрокаОбразцов.ТипОбразца;
			НоваяЗапись.МинимальныйОстаток = ТекСтрокаОбразцов.МинимальныйОстаток;
			НоваяЗапись.НулевойОтстаток = ТекСтрокаОбразцов.НулевойОстаток;
		КонецЦикла; 
	КонецЕсли; 
	НаборЗаписей.Записать(); 	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ТипПредупреждения = ПредопределенноеЗначение("Перечисление.ТипыПредупреждения.ПустаяСсылка");
	
	НаборЗаписей = РегистрыСведений.УведомлениеПоОстаткамКвоты.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Разрешение.Установить(Ссылка); 
	НаборЗаписей.Записать(); 	

КонецПроцедуры

#КонецОбласти

