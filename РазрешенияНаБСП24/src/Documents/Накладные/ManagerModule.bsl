#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//Остатки по разрешению
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоНакладной";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по накладной'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//Остатки по разрешению(на принтер)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоНакладнойНаПринтер";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по накладной(на принтер)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.СразуНаПринтер = Истина;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоНакладной") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетПоНакладной", НСтр("ru = 'Отчет по накладной'"), СформироватьПечатнуюФормуОтчетПоНакладной(МассивОбъектов, ОбъектыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоНакладнойНаПринтер") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетПоНакладнойНаПринтер", НСтр("ru = 'Отчет по накладной(на принтер)'"), СформироватьПечатнуюФормуОтчетПоНакладной(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
		
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// Подготавливает данные объекта к выводу на печать.
// 
// Параметры:
//  МассивДокументов - Массив - ссылки на объекты, для которых запрашиваются данные для печати;
//  МассивИменМакетов - Массив - имена макетов, в которые подставляются данные для печати.
//
// Возвращаемое значение:
//  Соответствие:
//   * Ключ - ЛюбаяСсылка - ссылка на объект информационной базы;
//   * Значение - Структура: 
//       ** Ключ - Строка - имя макета,
//       ** Значение - Структура - данные объекта.
Функция ПолучитьДанныеПечати(Знач МассивДокументов, Знач МассивИменМакетов) Экспорт
		
КонецФункции

#КонецОбласти

#КонецЕсли

#Область СлужебныеПроцедурыИФункции

Функция СформироватьПечатнуюФормуОтчетПоНакладной(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	//Формат
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =  "ВЫБРАТЬ
	                |	НакладныеРазрешения.Ссылка,
	                |	НакладныеРазрешения.Разрешение
	                |ИЗ
	                |	Документ.Накладные.Разрешения КАК НакладныеРазрешения
	                |ГДЕ
	                |	НакладныеРазрешения.Ссылка В(&МассивОбъектов)" ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;

	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьClearance = ТабличныйДокумент.ПолучитьОбласть("R1C1:R2C3");
		ОбластьClearance.Область("R1C1").Текст = Выборка.Разрешение.ClearanceДепо;
		ТабличныйДокумент.Вывести(ОбластьClearance);
		
		СтруктураДокументов = Новый Структура;
		СтруктураДокументов.Вставить("Разрешение", Выборка.Разрешение);
		СтруктураДокументов.Вставить("Накладная", Выборка.Ссылка);

		РезультатОтчета = СформироватьОтчетДляТаможниПоНакладной(СтруктураДокументов);
		
		ТабличныйДокумент.Вывести(РезультатОтчета);
		
		Область = ТабличныйДокумент.НайтиТекст("Накладная");
		Смещать = ТипСмещенияТабличногоДокумента.ПоГоризонтали;
		ТабличныйДокумент.УдалитьОбласть(Область, Смещать);
		
		Область = ТабличныйДокумент.НайтиТекст("Параметры");
		Смещать = ТипСмещенияТабличногоДокумента.ПоГоризонтали;
		ТабличныйДокумент.УдалитьОбласть(Область, Смещать);
		
		НоваяОбласть = Новый ТабличныйДокумент;
		ТекстЗаголовка = "Лист исполнения к Разрешению МЗ РФ № " + Выборка.Разрешение.Номер + " от " + Формат(Выборка.Разрешение.Issued, "ДФ=dd.MM.yyyy")+ " по накладной № "+ Выборка.Ссылка.Номер;
		
		ТабличныйДокумент.ПолеСверху							= 10;
		ТабличныйДокумент.ПолеСнизу								= 20;
		ТабличныйДокумент.ПолеСправа							= 10;
		ТабличныйДокумент.ПолеСлева								= 10;
		ТабличныйДокумент.Область(2,1,2,2);
		Область.Объединить();
		Область.Текст = ТекстЗаголовка;
		ТабличныйДокумент.Область("R2C1:R2C9").Объединить();
		Область = ТабличныйДокумент.ПолучитьОбласть("R4C1");
		
		НоваяОбласть = Новый ТабличныйДокумент;
		Секция = НоваяОбласть.ПолучитьОбласть("R1C3");
		Секция.Область("R1C3").Текст = "Подпись ___________";
		
		ТабличныйДокумент.Присоединить(Секция,,,);
				
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
			
КонецФункции

Функция СформироватьОтчетДляТаможниПоНакладной(СтруктураДокументов)
	
	ДокументРазрешение = СтруктураДокументов.Разрешение;
	ДокументНакладная = СтруктураДокументов.Накладная;
	
	//Получаем схему из макета
    СхемаКомпоновкиДанных = Отчеты.ОтчетДляТаможниПоНакладной.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

    //Создадим компоновщик настроек и загрузим настройки по умолчанию
    КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
    КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
    КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
    Настройки = КомпоновщикНастроек.Настройки;
    
    //Установка параметров отчета
    Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Разрешение", ДокументРазрешение);
    Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Накладная", ДокументНакладная);
    
    //Формируем макет, с помощью компоновщика макета
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

    //Передаем в макет компоновки схему, настройки и данные расшифровки
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки,);

    //Выполним компоновку с помощью процессора компоновки
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);

    //Очищаем поле табличного документа
    ТабличныйДокумент = Новый ТабличныйДокумент;
    //Выводим результат в табличный документ
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти
