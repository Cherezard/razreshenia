
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Запрос = Новый Запрос; 
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка); 
	Запрос.Текст = "ВЫБРАТЬ
	               |	НакладныеОбразцы.Образец,
	               |	НакладныеОбразцы.ТипОбразца,
	               |	НакладныеОбразцы.Разрешение,
	               |	СУММА(НакладныеОбразцы.Списание) КАК Списание
	               |ПОМЕСТИТЬ ВТ_СписокОбразцов
	               |ИЗ
	               |	Документ.Накладные.Образцы КАК НакладныеОбразцы
	               |ГДЕ
	               |	НакладныеОбразцы.Ссылка = &ДокументСсылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НакладныеОбразцы.Образец,
	               |	НакладныеОбразцы.Разрешение,
	               |	НакладныеОбразцы.ТипОбразца
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СписокОбразцов.Образец,
	               |	ВТ_СписокОбразцов.ТипОбразца,
	               |	ВТ_СписокОбразцов.Разрешение,
	               |	ВТ_СписокОбразцов.Списание
	               |ИЗ
	               |	ВТ_СписокОбразцов КАК ВТ_СписокОбразцов"; 
				   
	РезультатЗапроса = Запрос.Выполнить();   	
	
	Движения.ОстаткиПоКвоте.Записывать = Истина;
	Для Каждого ТекСтрокаОписаниеОбразцов Из Образцы Цикл
		Если ТекСтрокаОписаниеОбразцов.Списание > 0 Тогда
			Движение = Движения.ОстаткиПоКвоте.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = ДатаВывоза;
			Движение.Образец = ТекСтрокаОписаниеОбразцов.Образец;
			Движение.ТипОбразца = ТекСтрокаОписаниеОбразцов.ТипОбразца;
			Движение.Разрешение = ТекСтрокаОписаниеОбразцов.Разрешение;
			Движение.Количество = ТекСтрокаОписаниеОбразцов.Списание;
		КонецЕсли; 
	КонецЦикла;
	Движения.Записать();
	
	Запрос.УстановитьПараметр("МоментПроведения", ДатаВывоза);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_СписокОбразцов.Образец,
	               |	ВТ_СписокОбразцов.ТипОбразца,
	               |	ВТ_СписокОбразцов.Разрешение,
	               |	ЕСТЬNULL(ОстаткиПоКвотеОстатки.КоличествоОстаток, 0) - ВТ_СписокОбразцов.Списание КАК Остаток
	               |ПОМЕСТИТЬ ВТ_ОстаткиОбразцов
	               |ИЗ
	               |	ВТ_СписокОбразцов КАК ВТ_СписокОбразцов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКвоте.Остатки(&МоментПроведения, ) КАК ОстаткиПоКвотеОстатки
	               |		ПО ВТ_СписокОбразцов.Образец = ОстаткиПоКвотеОстатки.Образец
	               |			И ВТ_СписокОбразцов.ТипОбразца = ОстаткиПоКвотеОстатки.ТипОбразца
	               |			И ВТ_СписокОбразцов.Разрешение = ОстаткиПоКвотеОстатки.Разрешение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОстаткиОбразцов.Образец,
	               |	ВТ_ОстаткиОбразцов.ТипОбразца,
	               |	ВТ_ОстаткиОбразцов.Разрешение,
	               |	ВТ_ОстаткиОбразцов.Остаток
	               |ИЗ
	               |	ВТ_ОстаткиОбразцов КАК ВТ_ОстаткиОбразцов
	               |ГДЕ
	               |	ВТ_ОстаткиОбразцов.Остаток < 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ОстаткиОбразцов";
				   
	РезультатЗапроса = Запрос.Выполнить();   
	
	Выборка = РезультатЗапроса.Выбрать(); 
	Пока Выборка.Следующий() Цикл 
		Текст = "Не хватает квоты образца:"  + Выборка.Образец + " тип:" + Выборка.ТипОбразца + " по разрешению:" + Выборка.Разрешение + ", после проведения документа остаток составит" + Выборка.Остаток; 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,,,,Отказ);
	КонецЦикла;   	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	РаботаСПочтовымиСообщениямиРазрешения1С.ОтправитьУведомлениеОНулевомОстатке(Ссылка);
	
	Запрос.УстановитьПараметр("ПроцентОстатка", Константы.МинимальныйПроцентныйОстатокОбразца.Получить());
	Запрос.УстановитьПараметр("МоментПроведения", ДатаВывоза);
	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	ВТ_СписокОбразцов.Образец,
	               	|	ВТ_СписокОбразцов.ТипОбразца,
	               	|	ВТ_СписокОбразцов.Разрешение,
	               	|	ВЫБОР
	               	|		КОГДА НЕ ЕСТЬNULL(ОстаткиПоКвотеОстаткиИОбороты.КоличествоКонечныйОстаток, 0) = 0
	               	|			ТОГДА ВЫБОР
	               	|					КОГДА ОстаткиПоКвотеОстаткиИОбороты.КоличествоКонечныйОстаток / ОстаткиПоКвотеОстаткиИОбороты.КоличествоПриход * 100 <= &ПроцентОстатка
	               	|							И ОстаткиПоКвотеОстаткиИОбороты.КоличествоКонечныйОстаток / ОстаткиПоКвотеОстаткиИОбороты.КоличествоПриход * 100 > 0
	               	|						ТОГДА 1
	               	|					ИНАЧЕ 0
	               	|				КОНЕЦ
	               	|		ИНАЧЕ 2
	               	|	КОНЕЦ КАК ТипПредупреждения,
	               	|	ЕСТЬNULL(ОстаткиПоКвотеОстаткиИОбороты.КоличествоКонечныйОстаток, 0) КАК Остаток
	               	|ПОМЕСТИТЬ ВТ_Приоритет
	               	|ИЗ
	               	|	ВТ_СписокОбразцов КАК ВТ_СписокОбразцов
	               	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКвоте.ОстаткиИОбороты(, &МоментПроведения, , , ) КАК ОстаткиПоКвотеОстаткиИОбороты
	               	|		ПО ВТ_СписокОбразцов.Образец = ОстаткиПоКвотеОстаткиИОбороты.Образец
	               	|			И ВТ_СписокОбразцов.ТипОбразца = ОстаткиПоКвотеОстаткиИОбороты.ТипОбразца
	               	|			И ВТ_СписокОбразцов.Разрешение = ОстаткиПоКвотеОстаткиИОбороты.Разрешение
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	ВТ_Приоритет.Образец,
	               	|	ВТ_Приоритет.ТипОбразца,
	               	|	ВТ_Приоритет.Разрешение КАК Разрешение,
	               	|	ВТ_Приоритет.ТипПредупреждения КАК ТипПредупреждения,
	               	|	ВТ_Приоритет.Остаток
	               	|ИЗ
	               	|	ВТ_Приоритет КАК ВТ_Приоритет
	               	|ИТОГИ
	               	|	МАКСИМУМ(ТипПредупреждения)
	               	|ПО
	               	|	Разрешение
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|УНИЧТОЖИТЬ ВТ_СписокОбразцов
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|УНИЧТОЖИТЬ ВТ_Приоритет";
					
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл 
		
		Если ВыборкаДокументов.ТипПредупреждения = 0 Тогда
			ТипПредупреждения = ПредопределенноеЗначение("Перечисление.ТипыПредупреждения.ПустаяСсылка"); 
		ИначеЕсли ВыборкаДокументов.ТипПредупреждения = 1 Тогда
			ТипПредупреждения = ПредопределенноеЗначение("Перечисление.ТипыПредупреждения.Желтый"); 
		ИначеЕсли ВыборкаДокументов.ТипПредупреждения = 2 Тогда
			ТипПредупреждения = ПредопределенноеЗначение("Перечисление.ТипыПредупреждения.Красный"); 
		КонецЕсли;
		
		Если Не ВыборкаДокументов.Разрешение.ТипПредупреждения = ТипПредупреждения Тогда
			
			ВыборкаОбразцов = ВыборкаДокументов.Выбрать();
			Пока ВыборкаОбразцов.Следующий() Цикл
				Если Не ВыборкаОбразцов.ТипПредупреждения = 0 Тогда
					Текст = "Внимание:" + ВыборкаОбразцов.Образец + " тип:" + ВыборкаОбразцов.ТипОбразца + " по разрешению:" + ВыборкаОбразцов.Разрешение + ", после проведения документа остаток составит " + ВыборкаОбразцов.Остаток; 
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
				КонецЕсли; 
			КонецЦикла; 
			
			Объект = ВыборкаДокументов.Разрешение.ПолучитьОбъект();
			Объект.ТипПредупреждения = ТипПредупреждения;
			Объект.Записать();
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПроцентОстатка", Константы.МинимальныйПроцентныйОстатокОбразца.Получить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	НакладныеОбразцы.Образец,
	               |	НакладныеОбразцы.ТипОбразца,
	               |	НакладныеОбразцы.Разрешение,
	               |	НакладныеОбразцы.Списание
	               |ПОМЕСТИТЬ ВТ_СписокОбразцов
	               |ИЗ
	               |	Документ.Накладные.Образцы КАК НакладныеОбразцы
	               |ГДЕ
	               |	НакладныеОбразцы.Ссылка = &ДокументСсылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстаткиПоКвотеОстаткиИОбороты.Образец,
	               |	ОстаткиПоКвотеОстаткиИОбороты.ТипОбразца,
	               |	ОстаткиПоКвотеОстаткиИОбороты.Разрешение,
	               |	ОстаткиПоКвотеОстаткиИОбороты.КоличествоПриход,
	               |	ОстаткиПоКвотеОстаткиИОбороты.КоличествоРасход,
	               |	ОстаткиПоКвотеОстаткиИОбороты.КоличествоКонечныйОстаток
	               |ПОМЕСТИТЬ ВТ_Остатки
	               |ИЗ
	               |	РегистрНакопления.ОстаткиПоКвоте.ОстаткиИОбороты(
	               |			,
	               |			,
	               |			,
	               |			,
	               |			(Образец, ТипОбразца, Разрешение) В
	               |				(ВЫБРАТЬ
	               |					ВТ_СписокОбразцов.Образец,
	               |					ВТ_СписокОбразцов.ТипОбразца,
	               |					ВТ_СписокОбразцов.Разрешение
	               |				ИЗ
	               |					ВТ_СписокОбразцов КАК ВТ_СписокОбразцов)) КАК ОстаткиПоКвотеОстаткиИОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СписокОбразцов.Образец,
	               |	ВТ_СписокОбразцов.ТипОбразца,
	               |	ВТ_СписокОбразцов.Разрешение,
	               |	ВЫБОР
	               |		КОГДА НЕ ЕСТЬNULL(ВТ_Остатки.КоличествоКонечныйОстаток, 0) = 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА (ВТ_Остатки.КоличествоКонечныйОстаток + ВТ_СписокОбразцов.Списание) / ВТ_Остатки.КоличествоПриход * 100 <= &ПроцентОстатка
	               |							И (ВТ_Остатки.КоличествоКонечныйОстаток + ВТ_СписокОбразцов.Списание) / ВТ_Остатки.КоличествоПриход * 100 > 0
	               |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредупреждения.Желтый)
	               |					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПредупреждения.ПустаяСсылка)
	               |				КОНЕЦ
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПредупреждения.Красный)
	               |	КОНЕЦ КАК ТипПредупреждения
	               |ИЗ
	               |	ВТ_СписокОбразцов КАК ВТ_СписокОбразцов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	               |		ПО ВТ_СписокОбразцов.Образец = ВТ_Остатки.Образец
	               |			И ВТ_СписокОбразцов.ТипОбразца = ВТ_Остатки.ТипОбразца
	               |			И ВТ_СписокОбразцов.Разрешение = ВТ_Остатки.Разрешение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_СписокОбразцов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_Остатки";
				   
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.Разрешение.ТипПредупреждения = Выборка.ТипПредупреждения Тогда
			Объект = Выборка.Разрешение.ПолучитьОбъект();
			Объект.ТипПредупреждения = Выборка.ТипПредупреждения;
			Объект.Записать();
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		ПроверяемыеРеквизиты.Очистить()
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПроверитьЗаполнение();
	
КонецПроцедуры

#КонецОбласти