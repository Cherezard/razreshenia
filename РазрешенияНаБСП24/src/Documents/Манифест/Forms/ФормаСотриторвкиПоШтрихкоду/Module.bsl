
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДиалогСВопросом()
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);	
    ПоказатьВопрос(Оповещение, "При переносе не отсортированные отправления будут потеренны. Продолжить перенос?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "Перенести данные");
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт 		
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть(КодВозвратаДиалога.OK);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Документ = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Предусмотрено открытие формы только из документов.'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
			ЭтаФорма.АвтоЗаголовок = Ложь;
			ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;

	ПолучитьКопиюОтправленийИзХранилища(Параметры.АдресКопииОтправления);
	
	ИспользоватьПодключаемоеОборудование = ПодключаемоеОборудованиеВызовСервера.ИспользоватьПодключаемоеОборудование();
	
КонецПроцедуры

// Процедура обработчик события ПриОткрытии
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры 

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтаФорма);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		АдресОтправленийВХранилище = АдресОтправленийВХранилище(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	Иначе
		АдресОтправленийВХранилище = Неопределено;
	КонецЕсли;
	
	Если АдресОтправленийВХранилище <> Неопределено Тогда
		Структура = Новый Структура("АдресОтправленийВХранилище", АдресОтправленийВХранилище);
		ОповеститьОВыборе(Структура);
	КонецЕсли;

КонецПроцедуры

// Процедура обработчик события ОбработкаОповещения.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;
			ОбработатьШтрихкоды(ТекКод);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ШтрихкодыИОборудование

// Функция обрабатывает полученный штрихкод от сканера штрихкодов на клиенте.
//
&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Штрихкод = ОбщегоНазначенияКлиентСервер.УбратьЛишниеСимволы(ДанныеШтрихкодов, "0123456789");
	
	ОбработатьШтрихкодыНаСервере(Штрихкод);
	
КонецПроцедуры

// Функция обрабатывает полученный штрихкод от сканера штрихкодов на сервере.
//
&НаСервере
Функция ОбработатьШтрихкодыНаСервере(ДанныеШтрихкодов)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номер", ДанныеШтрихкодов);
	НайденноеЗначение = ОтправленияИзДокумента.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденноеЗначение.Количество() = 1 Тогда
		НоваяСтрока = ОтправленияНоваяСортировка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденноеЗначение[0]);
		ОтправленияИзДокумента.Удалить(НайденноеЗначение[0]);
	ИначеЕсли НайденноеЗначение.Количество() > 1 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Найдено несколько накладных с таким номером");
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Накладная с таким номером не найдена");
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если ОтправленияИзДокумента.Количество() = 0 Тогда
		ПеренестиВДокумент = Истина;
		Закрыть(КодВозвратаДиалога.OK);
	Иначе
		ДиалогСВопросом();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиОтправления

&НаКлиенте
Процедура ОтправленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтруктураСтроки = СтруктураСтрокиОтправлений();
	ЗаполнитьЗначенияСвойств(СтруктураСтроки, Элемент.ТекущиеДанные);
	ОтправленияВыборНаСервере(СтруктураСтроки);
	ОтправленияИзДокумента.Удалить(Элемент.ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ОтправленияВыборНаСервере(СтруктураСтроки)

	НоваяСтрока = ОтправленияНоваяСортировка.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Функция АдресОтправленийВХранилище(УникальныйИдентификаторВладельца)
	
	АдресВХранилище = Неопределено;
	
	Если ПеренестиВДокумент Тогда
		Отправления = ОтправленияНоваяСортировка.Выгрузить();

		АдресВХранилище = ПоместитьВоВременноеХранилище(Отправления, УникальныйИдентификаторВладельца);
	
	КонецЕсли;
	
	Возврат АдресВХранилище;
	
КонецФункции

&НаСервере
Процедура ПолучитьКопиюОтправленийИзХранилища(ВыбранноеЗначение)
	
	ОтправленияИзДокумента.Загрузить(ПолучитьИзВременногоХранилища(ВыбранноеЗначение));
	
	Для каждого СтрокаОтправления Из ОтправленияИзДокумента Цикл
		СтрокаОтправления.Номер = СтрокаОтправления.Накладная.Номер;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураСтрокиОтправлений() 
	
	СтруктураСтроки = Новый Структура();
	
	СтруктураСтроки.Вставить("Накладная");
	СтруктураСтроки.Вставить("Грузоотправитель");
	СтруктураСтроки.Вставить("Грузополучатель");
	СтруктураСтроки.Вставить("Количество");
	СтруктураСтроки.Вставить("ЕдиницаИзмерения");
	СтруктураСтроки.Вставить("ВесБрутто");
	СтруктураСтроки.Вставить("ВесНетто");
	СтруктураСтроки.Вставить("ФактурнаяСтоимость");
	СтруктураСтроки.Вставить("ТаможеннаяСтоимость");
	СтруктураСтроки.Вставить("Валюта");
	СтруктураСтроки.Вставить("Курс");
	
	Возврат СтруктураСтроки;
	
КонецФункции

#КонецОбласти
